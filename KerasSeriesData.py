'''
-#----#---------------------------------#####-----------------------------------######----------------------
-#---#--######-#####----##----####-----#-----#-######-#####--#-######--####-----#-----#---##---#####---##---
-#--#---#------#----#--#--#--#---------#-------#------#----#-#-#------#---------#-----#--#--#----#----#--#--
-###----#####--#----#-#----#--####------#####--#####--#----#-#-#####---####-----#-----#-#----#---#---#----#-
-#--#---#------#####--######------#----------#-#------#####--#-#-----------#----#-----#-######---#---######-
-#---#--#------#---#--#----#-#----#----#-----#-#------#---#--#-#------#----#----#-----#-#----#---#---#----#-
-#----#-######-#----#-#----#--####------#####--######-#----#-#-######--####-----######--#----#---#---#----#-

Jeff Pakingan

This code is for:
    - Experiment purpose
    - Training and testing a model based from a linear data

License: 
    https://creativecommons.org/publicdomain/zero/1.0/
'''

import numpy as np
import os
from keras.models import Sequential
from keras.layers import Dense
from keras.optimizers import Adam

os.environ["TF_CPP_MIN_LOG_LEVEL"]="2"


'''
-#######-------------------------------------------######----------------------
----#----#####----##---#-#----#-#-#----#--####-----#-----#---##---#####---##---
----#----#----#--#--#--#-##---#-#-##---#-#----#----#-----#--#--#----#----#--#--
----#----#----#-#----#-#-#-#--#-#-#-#--#-#---------#-----#-#----#---#---#----#-
----#----#####--######-#-#--#-#-#-#--#-#-#--###----#-----#-######---#---######-
----#----#---#--#----#-#-#---##-#-#---##-#----#----#-----#-#----#---#---#----#-
----#----#----#-#----#-#-#----#-#-#----#--####-----######--#----#---#---#----#-
'''

X_train = [
    [0,1,2],
    [0,6,12],
    [0,3,6],
    [0,10.5,20],
    [0,12,23],
    [0,9,18]
    ]

X_train = np.array(X_train)

y_train = [
    0,
    0,
    0,
    1,
    1,
    1
]
y_train = np.array(y_train)


'''
-#######----------------------------------------######----------------------
----#----######--####--#####-#-#----#--####-----#-----#---##---#####---##---
----#----#------#--------#---#-##---#-#----#----#-----#--#--#----#----#--#--
----#----#####---####----#---#-#-#--#-#---------#-----#-#----#---#---#----#-
----#----#-----------#---#---#-#--#-#-#--###----#-----#-######---#---######-
----#----#------#----#---#---#-#---##-#----#----#-----#-#----#---#---#----#-
----#----######--####----#---#-#----#--####-----######--#----#---#---#----#-
'''

X_test= [
    [0,2.25,3],
    [0,0,0],
    [0,11,21],
    [0,13,26],
    [0,2,5],
    [0,15,22]
    ]
X_test = np.array(X_test)


y_test = [
    0,0,1,1,0,1
]
y_test = np.array(y_test)



'''
-#-----#--------------------######--------------------------------------------
-##---##---##---#-#----#----#-----#-#####---####---####--#####----##---#----#-
-#-#-#-#--#--#--#-##---#----#-----#-#----#-#----#-#----#-#----#--#--#--##--##-
-#--#--#-#----#-#-#-#--#----######--#----#-#----#-#------#----#-#----#-#-##-#-
-#-----#-######-#-#--#-#----#-------#####--#----#-#--###-#####--######-#----#-
-#-----#-#----#-#-#---##----#-------#---#--#----#-#----#-#---#--#----#-#----#-
-#-----#-#----#-#-#----#----#-------#----#--####---####--#----#-#----#-#----#-
'''


model = Sequential()
model.add(Dense(1, input_shape=(3,), activation="sigmoid"))
model.compile(Adam(lr=0.05), 'binary_crossentropy', metrics=['accuracy'])
model.fit(X_train, y_train, epochs=500, verbose=1)
eval_result = model.evaluate(X_test, y_test)
print("\n\nTest loss:", eval_result[0], "Test accuracy:", eval_result[1])

